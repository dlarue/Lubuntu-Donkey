#
# various clips and fragments regarding handy tools to help with the Donkey NN
#

#disable HDMI interface on the rPi and save 25mA 
/usr/bin/tvservice -o
#/usr/bin/tvservice -p # to enable

python manage.py analyze --op=histogram --rec="user/angle"


donkey makemovie --config ~/d2b --tub ~d2b/data/tub_5_17-08-20/
or
cd ~/d2
donkey makemovie --tub ./data/tub_5_17-08-20/

donkey tubclean <data dir>
#Starts a HTML/web interface to edit and "clean" the tub data

Generate historgram of the steering angle:
sudo apt install python3-matplotlib
pip3 install matplotlib
donkey tubhist ~/d2/data/tub_4_17-11-18 --rec="user/angle"

Plot how the model fits the original data with:
donkey tubplot --tub <data> --model <model>


# improve rPi Camera speed and reduce blurring:
# https://picamera.readthedocs.io/en/release-1.13/fov.html
if anyone wants to try to take out/supress "image" blur, try adding this line to the initialize parts of the cameras.py file self.camera.exposure_mode = "sports" this is the picamera sports mode, in theory this mode could push the camera up to iso 1600 and thus keep very short exposure rates. I see noticeable improvements doing this.

Simulator( http://docs.donkeycar.com/guide/simulator/ ):
start simulator, use auto Drive w Rec, this logs data to simulator home directory in the log folder
Exit simulaotr.
mv the log folder to ~/d2/data then train on that data:
python manage.py train --tub=data/log --model=models/mySimPilot
Start the simulator server using mySimPilot
donkey sim --model=models/mySimPilot
Start the simulaotr, pick a scene and then select the NN Steering w Websockets option


# to see the PS3 Controller battery level:
cat /sys/class/power_supply/sony_controller_battery_00\:21\:4f\:07\:24\:4d/capacity 
upower -e
upower -i /org/freedesktop/UPower/devices/keyboard_sony_controller_battery_00o21o4fo07o24o4d

# Salient Object Visualization tool
# for Bootable Lubuntu-DonkeyCar ISO
git clone https://github.com/dlarue/keras-salient-object-visualisation
cd keras-salient-object-visualisation/
pip install runipy opencv-python
sudo apt install ffmpeg imagemagick python-pythonmagick
# run the visualization notebook:
runipy ./keras-salient-object-visualisation.ipynb


# Salient Object Visualization tool
# for from scratch 
git clone https://github.com/dlarue/keras-salient-object-visualisation
cd keras-salient-object-visualisation/
pip install runipy opencv-python
sudo apt-get install python3-matplotlib python-pythonmagick
sudo apt install ffmpeg imagemagick python-pythonmagick
pip install matplotlib
# run the visualization notebook:
runipy ./keras-salient-object-visualisation.ipynb

# If you want to run jupyter notebook GUI/browserUI
#pip install jupyter
#jupyter notebook
# If you want to run commandline only:
#echo Change this to save animation.mp4 using runipy:
#comment out:
#display(HTML(anim.to_html5_video()))
#
#insert this:
#anim.save('animation.mp4', writer='imagemagick', fps=30)
